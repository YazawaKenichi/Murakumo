ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"ICM20648.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.read_byte,"ax",%progbits
  20              		.align	1
  21              		.global	read_byte
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	read_byte:
  27              	.LVL0:
  28              	.LFB235:
  29              		.file 1 "Core/Src/ICM20648.c"
   1:Core/Src/ICM20648.c **** //ICM_20648.c Ver.1.2
   2:Core/Src/ICM20648.c **** #include "ICM20648.h"
   3:Core/Src/ICM20648.c **** 
   4:Core/Src/ICM20648.c **** #define USE_NCS 1
   5:Core/Src/ICM20648.c **** 
   6:Core/Src/ICM20648.c **** //volatile int16_t xa, ya, za;
   7:Core/Src/ICM20648.c **** //volatile int16_t xg, yg, zg;
   8:Core/Src/ICM20648.c **** 
   9:Core/Src/ICM20648.c **** volatile Inertial inertial;
  10:Core/Src/ICM20648.c **** volatile Inertial inertial_offset;
  11:Core/Src/ICM20648.c **** 
  12:Core/Src/ICM20648.c **** uint8_t read_byte( uint8_t reg )
  13:Core/Src/ICM20648.c **** {
  30              		.loc 1 13 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 13 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 24
  14:Core/Src/ICM20648.c **** 	uint8_t ret,val;
  44              		.loc 1 14 2 is_stmt 1 view .LVU2
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 2


  15:Core/Src/ICM20648.c **** 
  16:Core/Src/ICM20648.c **** 	ret = reg | 0x80;
  45              		.loc 1 16 2 view .LVU3
  46              		.loc 1 16 6 is_stmt 0 view .LVU4
  47 0004 60F07F00 		orn	r0, r0, #127
  48              	.LVL1:
  49              		.loc 1 16 6 view .LVU5
  50 0008 8DF80700 		strb	r0, [sp, #7]
  17:Core/Src/ICM20648.c **** #if USE_NCS
  18:Core/Src/ICM20648.c **** 	CS_RESET;
  51              		.loc 1 18 2 is_stmt 1 view .LVU6
  52 000c 0F4C     		ldr	r4, .L3
  53 000e 0022     		movs	r2, #0
  54 0010 4FF48051 		mov	r1, #4096
  55 0014 2046     		mov	r0, r4
  56 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL2:
  19:Core/Src/ICM20648.c **** #endif
  20:Core/Src/ICM20648.c **** 	HAL_SPI_Transmit(&hspi2,&ret,1,100);
  58              		.loc 1 20 2 view .LVU7
  59 001a 0D4D     		ldr	r5, .L3+4
  60 001c 6423     		movs	r3, #100
  61 001e 0122     		movs	r2, #1
  62 0020 0DF10701 		add	r1, sp, #7
  63 0024 2846     		mov	r0, r5
  64 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
  65              	.LVL3:
  21:Core/Src/ICM20648.c **** 	HAL_SPI_Receive(&hspi2,&val,1,100);
  66              		.loc 1 21 2 view .LVU8
  67 002a 6423     		movs	r3, #100
  68 002c 0122     		movs	r2, #1
  69 002e 0DF10601 		add	r1, sp, #6
  70 0032 2846     		mov	r0, r5
  71 0034 FFF7FEFF 		bl	HAL_SPI_Receive
  72              	.LVL4:
  22:Core/Src/ICM20648.c **** #if USE_NCS
  23:Core/Src/ICM20648.c **** 	CS_SET;
  73              		.loc 1 23 2 view .LVU9
  74 0038 0122     		movs	r2, #1
  75 003a 4FF48051 		mov	r1, #4096
  76 003e 2046     		mov	r0, r4
  77 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  78              	.LVL5:
  24:Core/Src/ICM20648.c **** #endif
  25:Core/Src/ICM20648.c **** 
  26:Core/Src/ICM20648.c **** 	return val;
  79              		.loc 1 26 2 view .LVU10
  27:Core/Src/ICM20648.c **** }
  80              		.loc 1 27 1 is_stmt 0 view .LVU11
  81 0044 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
  82 0048 03B0     		add	sp, sp, #12
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 12
  85              		@ sp needed
  86 004a 30BD     		pop	{r4, r5, pc}
  87              	.L4:
  88              		.align	2
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 3


  89              	.L3:
  90 004c 00040240 		.word	1073873920
  91 0050 00000000 		.word	hspi2
  92              		.cfi_endproc
  93              	.LFE235:
  95              		.section	.text.write_byte,"ax",%progbits
  96              		.align	1
  97              		.global	write_byte
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	write_byte:
 103              	.LVL6:
 104              	.LFB236:
  28:Core/Src/ICM20648.c **** 
  29:Core/Src/ICM20648.c **** void write_byte( uint8_t reg, uint8_t val )
  30:Core/Src/ICM20648.c **** {
 105              		.loc 1 30 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 16
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 1 30 1 is_stmt 0 view .LVU13
 110 0000 30B5     		push	{r4, r5, lr}
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 5, -8
 115              		.cfi_offset 14, -4
 116 0002 85B0     		sub	sp, sp, #20
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 32
 119 0004 8DF80710 		strb	r1, [sp, #7]
  31:Core/Src/ICM20648.c **** 	uint8_t ret;
 120              		.loc 1 31 2 is_stmt 1 view .LVU14
  32:Core/Src/ICM20648.c **** 
  33:Core/Src/ICM20648.c **** 	ret = reg & 0x7F;
 121              		.loc 1 33 2 view .LVU15
 122              		.loc 1 33 12 is_stmt 0 view .LVU16
 123 0008 00F07F00 		and	r0, r0, #127
 124              	.LVL7:
 125              		.loc 1 33 6 view .LVU17
 126 000c 8DF80F00 		strb	r0, [sp, #15]
  34:Core/Src/ICM20648.c **** #if USE_NCS
  35:Core/Src/ICM20648.c **** 	CS_RESET;
 127              		.loc 1 35 2 is_stmt 1 view .LVU18
 128 0010 0E4C     		ldr	r4, .L7
 129 0012 0022     		movs	r2, #0
 130 0014 4FF48051 		mov	r1, #4096
 131              	.LVL8:
 132              		.loc 1 35 2 is_stmt 0 view .LVU19
 133 0018 2046     		mov	r0, r4
 134 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 135              	.LVL9:
  36:Core/Src/ICM20648.c **** #endif
  37:Core/Src/ICM20648.c **** 	HAL_SPI_Transmit(&hspi2,&ret,1,100);
 136              		.loc 1 37 2 is_stmt 1 view .LVU20
 137 001e 0C4D     		ldr	r5, .L7+4
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 4


 138 0020 6423     		movs	r3, #100
 139 0022 0122     		movs	r2, #1
 140 0024 0DF10F01 		add	r1, sp, #15
 141 0028 2846     		mov	r0, r5
 142 002a FFF7FEFF 		bl	HAL_SPI_Transmit
 143              	.LVL10:
  38:Core/Src/ICM20648.c **** 	HAL_SPI_Transmit(&hspi2,&val,1,100);
 144              		.loc 1 38 2 view .LVU21
 145 002e 6423     		movs	r3, #100
 146 0030 0122     		movs	r2, #1
 147 0032 0DF10701 		add	r1, sp, #7
 148 0036 2846     		mov	r0, r5
 149 0038 FFF7FEFF 		bl	HAL_SPI_Transmit
 150              	.LVL11:
  39:Core/Src/ICM20648.c **** #if USE_NCS
  40:Core/Src/ICM20648.c **** 	CS_SET;
 151              		.loc 1 40 2 view .LVU22
 152 003c 0122     		movs	r2, #1
 153 003e 4FF48051 		mov	r1, #4096
 154 0042 2046     		mov	r0, r4
 155 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 156              	.LVL12:
  41:Core/Src/ICM20648.c **** #endif
  42:Core/Src/ICM20648.c **** }
 157              		.loc 1 42 1 is_stmt 0 view .LVU23
 158 0048 05B0     		add	sp, sp, #20
 159              	.LCFI5:
 160              		.cfi_def_cfa_offset 12
 161              		@ sp needed
 162 004a 30BD     		pop	{r4, r5, pc}
 163              	.L8:
 164              		.align	2
 165              	.L7:
 166 004c 00040240 		.word	1073873920
 167 0050 00000000 		.word	hspi2
 168              		.cfi_endproc
 169              	.LFE236:
 171              		.section	.text.IMU_fin,"ax",%progbits
 172              		.align	1
 173              		.global	IMU_fin
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	IMU_fin:
 179              	.LFB238:
  43:Core/Src/ICM20648.c **** 
  44:Core/Src/ICM20648.c **** uint8_t IMU_init(uint8_t* wai)
  45:Core/Src/ICM20648.c **** {
  46:Core/Src/ICM20648.c **** 	CS_RESET;
  47:Core/Src/ICM20648.c **** 	uint8_t who_am_i,ret;
  48:Core/Src/ICM20648.c **** 	ret = 0;
  49:Core/Src/ICM20648.c **** 
  50:Core/Src/ICM20648.c **** 	inertial.accel.x = 0;
  51:Core/Src/ICM20648.c **** 	inertial.accel.y = 0;
  52:Core/Src/ICM20648.c **** 	inertial.accel.z = 0;
  53:Core/Src/ICM20648.c **** 	inertial.gyro = inertial.accel;
  54:Core/Src/ICM20648.c **** 	inertial_offset = inertial;
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 5


  55:Core/Src/ICM20648.c **** 
  56:Core/Src/ICM20648.c **** 	/*
  57:Core/Src/ICM20648.c **** 	xg = 0;
  58:Core/Src/ICM20648.c **** 	yg = 0;
  59:Core/Src/ICM20648.c **** 	zg = 0;
  60:Core/Src/ICM20648.c **** 	xa = 0;
  61:Core/Src/ICM20648.c **** 	ya = 0;
  62:Core/Src/ICM20648.c **** 	za = 0;
  63:Core/Src/ICM20648.c **** 	*/
  64:Core/Src/ICM20648.c **** 
  65:Core/Src/ICM20648.c **** 	who_am_i = read_byte(0x00);
  66:Core/Src/ICM20648.c **** 	*wai = who_am_i;
  67:Core/Src/ICM20648.c **** 	if ( who_am_i == 0xE0 )
  68:Core/Src/ICM20648.c **** 	{	// ICM-20648 is 0xE0
  69:Core/Src/ICM20648.c **** 		ret = 1;
  70:Core/Src/ICM20648.c **** 		write_byte(PWR_MGMT_1,0x01);	//PWR_MGMT_1
  71:Core/Src/ICM20648.c **** 		HAL_Delay(100);
  72:Core/Src/ICM20648.c **** 		write_byte(USER_CTRL,0x10);	//USER_CTRL
  73:Core/Src/ICM20648.c **** 		write_byte(REG_BANK_SEL,0x20);	//USER_BANK2
  74:Core/Src/ICM20648.c **** 		// shimotoriharuki
  75:Core/Src/ICM20648.c **** 		//write_byte(0x01,0x06);	//range±2000dps DLPF disable	// range+-2000
  76:Core/Src/ICM20648.c **** 		// igc8810
  77:Core/Src/ICM20648.c **** 		write_byte(0x01,0x07);	//range±2000dps DLPF enable DLPFCFG = 0
  78:Core/Src/ICM20648.c **** 		//write_byte(0x01,0x0F);	//range±2000dps DLPF enable DLPFCFG = 1
  79:Core/Src/ICM20648.c **** 		//write_byte(0x01,0x17);	//range±2000dps DLPF enable DLPFCFG = 2
  80:Core/Src/ICM20648.c **** 		//2:1 GYRO_FS_SEL[1:0] 00:±250	01:±500 10:±1000 11:±2000
  81:Core/Src/ICM20648.c **** 		// igc8810
  82:Core/Src/ICM20648.c **** 		write_byte(0x14,0x00);	//range±2g
  83:Core/Src/ICM20648.c **** 		// shimotoriharuki
  84:Core/Src/ICM20648.c **** 		//write_byte(0x14,0x06);	// range+-16
  85:Core/Src/ICM20648.c **** 		//2:1 ACCEL_FS_SEL[1:0] 00:±2	01:±4 10:±8 11:±16
  86:Core/Src/ICM20648.c **** 		write_byte(REG_BANK_SEL,0x00);	//USER_BANK0
  87:Core/Src/ICM20648.c **** 		IMU_set_offset();
  88:Core/Src/ICM20648.c **** 	}
  89:Core/Src/ICM20648.c **** #if USE_NCS
  90:Core/Src/ICM20648.c **** 	CS_SET;
  91:Core/Src/ICM20648.c **** #endif
  92:Core/Src/ICM20648.c **** 	return ret;
  93:Core/Src/ICM20648.c **** }
  94:Core/Src/ICM20648.c **** 
  95:Core/Src/ICM20648.c **** void IMU_fin()
  96:Core/Src/ICM20648.c **** {
 180              		.loc 1 96 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
  97:Core/Src/ICM20648.c **** #if !USE_NCS
  98:Core/Src/ICM20648.c **** 	CS_SET;
  99:Core/Src/ICM20648.c **** #endif
 100:Core/Src/ICM20648.c **** }
 185              		.loc 1 100 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE238:
 190              		.section	.text.IMU_read,"ax",%progbits
 191              		.align	1
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 6


 192              		.global	IMU_read
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	IMU_read:
 198              	.LFB240:
 101:Core/Src/ICM20648.c **** 
 102:Core/Src/ICM20648.c **** void IMU_set_offset()
 103:Core/Src/ICM20648.c **** {
 104:Core/Src/ICM20648.c **** 	IMU_read();
 105:Core/Src/ICM20648.c **** 	inertial_offset = inertial;
 106:Core/Src/ICM20648.c **** }
 107:Core/Src/ICM20648.c **** 
 108:Core/Src/ICM20648.c **** void IMU_read()
 109:Core/Src/ICM20648.c **** {
 199              		.loc 1 109 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 38B5     		push	{r3, r4, r5, lr}
 204              	.LCFI6:
 205              		.cfi_def_cfa_offset 16
 206              		.cfi_offset 3, -16
 207              		.cfi_offset 4, -12
 208              		.cfi_offset 5, -8
 209              		.cfi_offset 14, -4
 110:Core/Src/ICM20648.c **** 	inertial.accel.x = ((int16_t)read_byte(ACCEL_XOUT_H) << 8) | ((int16_t)read_byte(ACCEL_XOUT_L));
 210              		.loc 1 110 2 view .LVU27
 211              		.loc 1 110 31 is_stmt 0 view .LVU28
 212 0002 2D20     		movs	r0, #45
 213 0004 FFF7FEFF 		bl	read_byte
 214              	.LVL13:
 215              		.loc 1 110 55 view .LVU29
 216 0008 0402     		lsls	r4, r0, #8
 217              		.loc 1 110 73 view .LVU30
 218 000a 2E20     		movs	r0, #46
 219 000c FFF7FEFF 		bl	read_byte
 220              	.LVL14:
 221 0010 00B2     		sxth	r0, r0
 222              		.loc 1 110 61 view .LVU31
 223 0012 2043     		orrs	r0, r0, r4
 224 0014 00B2     		sxth	r0, r0
 225              		.loc 1 110 19 view .LVU32
 226 0016 1D4C     		ldr	r4, .L12
 227 0018 2080     		strh	r0, [r4]	@ movhi
 111:Core/Src/ICM20648.c **** 	inertial.accel.y = ((int16_t)read_byte(ACCEL_YOUT_H) << 8) | ((int16_t)read_byte(ACCEL_YOUT_L));
 228              		.loc 1 111 2 is_stmt 1 view .LVU33
 229              		.loc 1 111 31 is_stmt 0 view .LVU34
 230 001a 2F20     		movs	r0, #47
 231 001c FFF7FEFF 		bl	read_byte
 232              	.LVL15:
 233              		.loc 1 111 55 view .LVU35
 234 0020 0502     		lsls	r5, r0, #8
 235              		.loc 1 111 73 view .LVU36
 236 0022 3020     		movs	r0, #48
 237 0024 FFF7FEFF 		bl	read_byte
 238              	.LVL16:
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 7


 239 0028 00B2     		sxth	r0, r0
 240              		.loc 1 111 61 view .LVU37
 241 002a 2843     		orrs	r0, r0, r5
 242 002c 00B2     		sxth	r0, r0
 243              		.loc 1 111 19 view .LVU38
 244 002e 6080     		strh	r0, [r4, #2]	@ movhi
 112:Core/Src/ICM20648.c **** 	inertial.accel.z = ((int16_t)read_byte(ACCEL_ZOUT_H) << 8) | ((int16_t)read_byte(ACCEL_ZOUT_L));
 245              		.loc 1 112 2 is_stmt 1 view .LVU39
 246              		.loc 1 112 31 is_stmt 0 view .LVU40
 247 0030 3120     		movs	r0, #49
 248 0032 FFF7FEFF 		bl	read_byte
 249              	.LVL17:
 250              		.loc 1 112 55 view .LVU41
 251 0036 0502     		lsls	r5, r0, #8
 252              		.loc 1 112 73 view .LVU42
 253 0038 3220     		movs	r0, #50
 254 003a FFF7FEFF 		bl	read_byte
 255              	.LVL18:
 256 003e 00B2     		sxth	r0, r0
 257              		.loc 1 112 61 view .LVU43
 258 0040 2843     		orrs	r0, r0, r5
 259 0042 00B2     		sxth	r0, r0
 260              		.loc 1 112 19 view .LVU44
 261 0044 A080     		strh	r0, [r4, #4]	@ movhi
 113:Core/Src/ICM20648.c **** 	inertial.gyro.x = ((int16_t)read_byte(GYRO_XOUT_H) << 8) | ((int16_t)read_byte(GYRO_XOUT_L));
 262              		.loc 1 113 2 is_stmt 1 view .LVU45
 263              		.loc 1 113 30 is_stmt 0 view .LVU46
 264 0046 3320     		movs	r0, #51
 265 0048 FFF7FEFF 		bl	read_byte
 266              	.LVL19:
 267              		.loc 1 113 53 view .LVU47
 268 004c 0502     		lsls	r5, r0, #8
 269              		.loc 1 113 71 view .LVU48
 270 004e 3420     		movs	r0, #52
 271 0050 FFF7FEFF 		bl	read_byte
 272              	.LVL20:
 273 0054 00B2     		sxth	r0, r0
 274              		.loc 1 113 59 view .LVU49
 275 0056 2843     		orrs	r0, r0, r5
 276 0058 00B2     		sxth	r0, r0
 277              		.loc 1 113 18 view .LVU50
 278 005a E080     		strh	r0, [r4, #6]	@ movhi
 114:Core/Src/ICM20648.c **** 	inertial.gyro.y = ((int16_t)read_byte(GYRO_YOUT_H) << 8) | ((int16_t)read_byte(GYRO_YOUT_L));
 279              		.loc 1 114 2 is_stmt 1 view .LVU51
 280              		.loc 1 114 30 is_stmt 0 view .LVU52
 281 005c 3520     		movs	r0, #53
 282 005e FFF7FEFF 		bl	read_byte
 283              	.LVL21:
 284              		.loc 1 114 53 view .LVU53
 285 0062 0502     		lsls	r5, r0, #8
 286              		.loc 1 114 71 view .LVU54
 287 0064 3620     		movs	r0, #54
 288 0066 FFF7FEFF 		bl	read_byte
 289              	.LVL22:
 290 006a 00B2     		sxth	r0, r0
 291              		.loc 1 114 59 view .LVU55
 292 006c 2843     		orrs	r0, r0, r5
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 8


 293 006e 00B2     		sxth	r0, r0
 294              		.loc 1 114 18 view .LVU56
 295 0070 2081     		strh	r0, [r4, #8]	@ movhi
 115:Core/Src/ICM20648.c **** 	inertial.gyro.z = ((int16_t)read_byte(GYRO_ZOUT_H) << 8) | ((int16_t)read_byte(GYRO_ZOUT_L));
 296              		.loc 1 115 2 is_stmt 1 view .LVU57
 297              		.loc 1 115 30 is_stmt 0 view .LVU58
 298 0072 3720     		movs	r0, #55
 299 0074 FFF7FEFF 		bl	read_byte
 300              	.LVL23:
 301              		.loc 1 115 53 view .LVU59
 302 0078 0502     		lsls	r5, r0, #8
 303              		.loc 1 115 71 view .LVU60
 304 007a 3820     		movs	r0, #56
 305 007c FFF7FEFF 		bl	read_byte
 306              	.LVL24:
 307 0080 00B2     		sxth	r0, r0
 308              		.loc 1 115 59 view .LVU61
 309 0082 2843     		orrs	r0, r0, r5
 310 0084 00B2     		sxth	r0, r0
 311              		.loc 1 115 18 view .LVU62
 312 0086 6081     		strh	r0, [r4, #10]	@ movhi
 116:Core/Src/ICM20648.c **** }
 313              		.loc 1 116 1 view .LVU63
 314 0088 38BD     		pop	{r3, r4, r5, pc}
 315              	.L13:
 316 008a 00BF     		.align	2
 317              	.L12:
 318 008c 00000000 		.word	.LANCHOR0
 319              		.cfi_endproc
 320              	.LFE240:
 322              		.section	.text.IMU_set_offset,"ax",%progbits
 323              		.align	1
 324              		.global	IMU_set_offset
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	IMU_set_offset:
 330              	.LFB239:
 103:Core/Src/ICM20648.c **** 	IMU_read();
 331              		.loc 1 103 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 08B5     		push	{r3, lr}
 336              	.LCFI7:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 104:Core/Src/ICM20648.c **** 	inertial_offset = inertial;
 340              		.loc 1 104 2 view .LVU65
 341 0002 FFF7FEFF 		bl	IMU_read
 342              	.LVL25:
 105:Core/Src/ICM20648.c **** }
 343              		.loc 1 105 2 view .LVU66
 105:Core/Src/ICM20648.c **** }
 344              		.loc 1 105 18 is_stmt 0 view .LVU67
 345 0006 034B     		ldr	r3, .L16
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 9


 346 0008 034A     		ldr	r2, .L16+4
 347 000a 07CA     		ldm	r2, {r0, r1, r2}
 348 000c 83E80700 		stm	r3, {r0, r1, r2}
 106:Core/Src/ICM20648.c **** 
 349              		.loc 1 106 1 view .LVU68
 350 0010 08BD     		pop	{r3, pc}
 351              	.L17:
 352 0012 00BF     		.align	2
 353              	.L16:
 354 0014 00000000 		.word	.LANCHOR1
 355 0018 00000000 		.word	.LANCHOR0
 356              		.cfi_endproc
 357              	.LFE239:
 359              		.section	.text.IMU_init,"ax",%progbits
 360              		.align	1
 361              		.global	IMU_init
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	IMU_init:
 367              	.LVL26:
 368              	.LFB237:
  45:Core/Src/ICM20648.c **** 	CS_RESET;
 369              		.loc 1 45 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
  45:Core/Src/ICM20648.c **** 	CS_RESET;
 373              		.loc 1 45 1 is_stmt 0 view .LVU70
 374 0000 38B5     		push	{r3, r4, r5, lr}
 375              	.LCFI8:
 376              		.cfi_def_cfa_offset 16
 377              		.cfi_offset 3, -16
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
 381 0002 0446     		mov	r4, r0
  46:Core/Src/ICM20648.c **** 	uint8_t who_am_i,ret;
 382              		.loc 1 46 2 is_stmt 1 view .LVU71
 383 0004 0022     		movs	r2, #0
 384 0006 4FF48051 		mov	r1, #4096
 385 000a 2348     		ldr	r0, .L23
 386              	.LVL27:
  46:Core/Src/ICM20648.c **** 	uint8_t who_am_i,ret;
 387              		.loc 1 46 2 is_stmt 0 view .LVU72
 388 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 389              	.LVL28:
  47:Core/Src/ICM20648.c **** 	ret = 0;
 390              		.loc 1 47 2 is_stmt 1 view .LVU73
  48:Core/Src/ICM20648.c **** 
 391              		.loc 1 48 2 view .LVU74
  50:Core/Src/ICM20648.c **** 	inertial.accel.y = 0;
 392              		.loc 1 50 2 view .LVU75
  50:Core/Src/ICM20648.c **** 	inertial.accel.y = 0;
 393              		.loc 1 50 19 is_stmt 0 view .LVU76
 394 0010 224B     		ldr	r3, .L23+4
 395 0012 4FF0000C 		mov	ip, #0
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 10


 396 0016 A3F800C0 		strh	ip, [r3]	@ movhi
  51:Core/Src/ICM20648.c **** 	inertial.accel.z = 0;
 397              		.loc 1 51 2 is_stmt 1 view .LVU77
  51:Core/Src/ICM20648.c **** 	inertial.accel.z = 0;
 398              		.loc 1 51 19 is_stmt 0 view .LVU78
 399 001a A3F802C0 		strh	ip, [r3, #2]	@ movhi
  52:Core/Src/ICM20648.c **** 	inertial.gyro = inertial.accel;
 400              		.loc 1 52 2 is_stmt 1 view .LVU79
  52:Core/Src/ICM20648.c **** 	inertial.gyro = inertial.accel;
 401              		.loc 1 52 19 is_stmt 0 view .LVU80
 402 001e A3F804C0 		strh	ip, [r3, #4]	@ movhi
  53:Core/Src/ICM20648.c **** 	inertial_offset = inertial;
 403              		.loc 1 53 2 is_stmt 1 view .LVU81
  53:Core/Src/ICM20648.c **** 	inertial_offset = inertial;
 404              		.loc 1 53 16 is_stmt 0 view .LVU82
 405 0022 1A46     		mov	r2, r3
 406 0024 52F8060B 		ldr	r0, [r2], #6
 407 0028 C3F80600 		str	r0, [r3, #6]	@ unaligned
 408 002c 9988     		ldrh	r1, [r3, #4]	@ unaligned
 409 002e 9180     		strh	r1, [r2, #4]	@ unaligned
  54:Core/Src/ICM20648.c **** 
 410              		.loc 1 54 2 is_stmt 1 view .LVU83
  54:Core/Src/ICM20648.c **** 
 411              		.loc 1 54 18 is_stmt 0 view .LVU84
 412 0030 1B4D     		ldr	r5, .L23+8
 413 0032 93E80700 		ldm	r3, {r0, r1, r2}
 414 0036 85E80700 		stm	r5, {r0, r1, r2}
  65:Core/Src/ICM20648.c **** 	*wai = who_am_i;
 415              		.loc 1 65 2 is_stmt 1 view .LVU85
  65:Core/Src/ICM20648.c **** 	*wai = who_am_i;
 416              		.loc 1 65 13 is_stmt 0 view .LVU86
 417 003a 6046     		mov	r0, ip
 418 003c FFF7FEFF 		bl	read_byte
 419              	.LVL29:
  66:Core/Src/ICM20648.c **** 	if ( who_am_i == 0xE0 )
 420              		.loc 1 66 2 is_stmt 1 view .LVU87
  66:Core/Src/ICM20648.c **** 	if ( who_am_i == 0xE0 )
 421              		.loc 1 66 7 is_stmt 0 view .LVU88
 422 0040 2070     		strb	r0, [r4]
  67:Core/Src/ICM20648.c **** 	{	// ICM-20648 is 0xE0
 423              		.loc 1 67 2 is_stmt 1 view .LVU89
  67:Core/Src/ICM20648.c **** 	{	// ICM-20648 is 0xE0
 424              		.loc 1 67 5 is_stmt 0 view .LVU90
 425 0042 E028     		cmp	r0, #224
 426 0044 08D0     		beq	.L22
  48:Core/Src/ICM20648.c **** 
 427              		.loc 1 48 6 view .LVU91
 428 0046 0024     		movs	r4, #0
 429              	.LVL30:
 430              	.L19:
  90:Core/Src/ICM20648.c **** #endif
 431              		.loc 1 90 2 is_stmt 1 view .LVU92
 432 0048 0122     		movs	r2, #1
 433 004a 4FF48051 		mov	r1, #4096
 434 004e 1248     		ldr	r0, .L23
 435 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 436              	.LVL31:
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 11


  92:Core/Src/ICM20648.c **** }
 437              		.loc 1 92 2 view .LVU93
  93:Core/Src/ICM20648.c **** 
 438              		.loc 1 93 1 is_stmt 0 view .LVU94
 439 0054 2046     		mov	r0, r4
 440 0056 38BD     		pop	{r3, r4, r5, pc}
 441              	.LVL32:
 442              	.L22:
  69:Core/Src/ICM20648.c **** 		write_byte(PWR_MGMT_1,0x01);	//PWR_MGMT_1
 443              		.loc 1 69 3 is_stmt 1 view .LVU95
  70:Core/Src/ICM20648.c **** 		HAL_Delay(100);
 444              		.loc 1 70 3 view .LVU96
 445 0058 0121     		movs	r1, #1
 446 005a 0620     		movs	r0, #6
 447              	.LVL33:
  70:Core/Src/ICM20648.c **** 		HAL_Delay(100);
 448              		.loc 1 70 3 is_stmt 0 view .LVU97
 449 005c FFF7FEFF 		bl	write_byte
 450              	.LVL34:
  71:Core/Src/ICM20648.c **** 		write_byte(USER_CTRL,0x10);	//USER_CTRL
 451              		.loc 1 71 3 is_stmt 1 view .LVU98
 452 0060 6420     		movs	r0, #100
 453 0062 FFF7FEFF 		bl	HAL_Delay
 454              	.LVL35:
  72:Core/Src/ICM20648.c **** 		write_byte(REG_BANK_SEL,0x20);	//USER_BANK2
 455              		.loc 1 72 3 view .LVU99
 456 0066 1021     		movs	r1, #16
 457 0068 0320     		movs	r0, #3
 458 006a FFF7FEFF 		bl	write_byte
 459              	.LVL36:
  73:Core/Src/ICM20648.c **** 		// shimotoriharuki
 460              		.loc 1 73 3 view .LVU100
 461 006e 2021     		movs	r1, #32
 462 0070 7F20     		movs	r0, #127
 463 0072 FFF7FEFF 		bl	write_byte
 464              	.LVL37:
  77:Core/Src/ICM20648.c **** 		//write_byte(0x01,0x0F);	//range±2000dps DLPF enable DLPFCFG = 1
 465              		.loc 1 77 3 view .LVU101
 466 0076 0721     		movs	r1, #7
 467 0078 0120     		movs	r0, #1
 468 007a FFF7FEFF 		bl	write_byte
 469              	.LVL38:
  82:Core/Src/ICM20648.c **** 		// shimotoriharuki
 470              		.loc 1 82 3 view .LVU102
 471 007e 0021     		movs	r1, #0
 472 0080 1420     		movs	r0, #20
 473 0082 FFF7FEFF 		bl	write_byte
 474              	.LVL39:
  86:Core/Src/ICM20648.c **** 		IMU_set_offset();
 475              		.loc 1 86 3 view .LVU103
 476 0086 0021     		movs	r1, #0
 477 0088 7F20     		movs	r0, #127
 478 008a FFF7FEFF 		bl	write_byte
 479              	.LVL40:
  87:Core/Src/ICM20648.c **** 	}
 480              		.loc 1 87 3 view .LVU104
 481 008e FFF7FEFF 		bl	IMU_set_offset
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 12


 482              	.LVL41:
  69:Core/Src/ICM20648.c **** 		write_byte(PWR_MGMT_1,0x01);	//PWR_MGMT_1
 483              		.loc 1 69 7 is_stmt 0 view .LVU105
 484 0092 0124     		movs	r4, #1
 485              	.LVL42:
  69:Core/Src/ICM20648.c **** 		write_byte(PWR_MGMT_1,0x01);	//PWR_MGMT_1
 486              		.loc 1 69 7 view .LVU106
 487 0094 D8E7     		b	.L19
 488              	.L24:
 489 0096 00BF     		.align	2
 490              	.L23:
 491 0098 00040240 		.word	1073873920
 492 009c 00000000 		.word	.LANCHOR0
 493 00a0 00000000 		.word	.LANCHOR1
 494              		.cfi_endproc
 495              	.LFE237:
 497              		.section	.text.Inertial_Integral,"ax",%progbits
 498              		.align	1
 499              		.global	Inertial_Integral
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 504              	Inertial_Integral:
 505              	.LVL43:
 506              	.LFB241:
 117:Core/Src/ICM20648.c **** 
 118:Core/Src/ICM20648.c **** void Inertial_Integral(Inertial *a)
 119:Core/Src/ICM20648.c **** {
 507              		.loc 1 119 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		.loc 1 119 1 is_stmt 0 view .LVU108
 512 0000 10B5     		push	{r4, lr}
 513              	.LCFI9:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 4, -8
 516              		.cfi_offset 14, -4
 517 0002 0446     		mov	r4, r0
 120:Core/Src/ICM20648.c **** 	IMU_read();
 518              		.loc 1 120 2 is_stmt 1 view .LVU109
 519 0004 FFF7FEFF 		bl	IMU_read
 520              	.LVL44:
 121:Core/Src/ICM20648.c **** 	a->accel.x += inertial.accel.x;
 521              		.loc 1 121 2 view .LVU110
 522              		.loc 1 121 30 is_stmt 0 view .LVU111
 523 0008 0F4B     		ldr	r3, .L27
 524 000a 1A88     		ldrh	r2, [r3]
 525              		.loc 1 121 13 view .LVU112
 526 000c 2188     		ldrh	r1, [r4]
 527 000e 11FA82F2 		uxtah	r2, r1, r2
 528 0012 2280     		strh	r2, [r4]	@ movhi
 122:Core/Src/ICM20648.c **** 	a->accel.y += inertial.accel.y;
 529              		.loc 1 122 2 is_stmt 1 view .LVU113
 530              		.loc 1 122 30 is_stmt 0 view .LVU114
 531 0014 5A88     		ldrh	r2, [r3, #2]
 532              		.loc 1 122 13 view .LVU115
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 13


 533 0016 6188     		ldrh	r1, [r4, #2]
 534 0018 11FA82F2 		uxtah	r2, r1, r2
 535 001c 6280     		strh	r2, [r4, #2]	@ movhi
 123:Core/Src/ICM20648.c **** 	a->accel.z += inertial.accel.z;
 536              		.loc 1 123 2 is_stmt 1 view .LVU116
 537              		.loc 1 123 30 is_stmt 0 view .LVU117
 538 001e 9A88     		ldrh	r2, [r3, #4]
 539              		.loc 1 123 13 view .LVU118
 540 0020 A188     		ldrh	r1, [r4, #4]
 541 0022 11FA82F2 		uxtah	r2, r1, r2
 542 0026 A280     		strh	r2, [r4, #4]	@ movhi
 124:Core/Src/ICM20648.c **** 	a->gyro.x += inertial.gyro.x;
 543              		.loc 1 124 2 is_stmt 1 view .LVU119
 544              		.loc 1 124 28 is_stmt 0 view .LVU120
 545 0028 DA88     		ldrh	r2, [r3, #6]
 546              		.loc 1 124 12 view .LVU121
 547 002a E188     		ldrh	r1, [r4, #6]
 548 002c 11FA82F2 		uxtah	r2, r1, r2
 549 0030 E280     		strh	r2, [r4, #6]	@ movhi
 125:Core/Src/ICM20648.c **** 	a->gyro.y += inertial.gyro.y;
 550              		.loc 1 125 2 is_stmt 1 view .LVU122
 551              		.loc 1 125 28 is_stmt 0 view .LVU123
 552 0032 1A89     		ldrh	r2, [r3, #8]
 553              		.loc 1 125 12 view .LVU124
 554 0034 2189     		ldrh	r1, [r4, #8]
 555 0036 11FA82F2 		uxtah	r2, r1, r2
 556 003a 2281     		strh	r2, [r4, #8]	@ movhi
 126:Core/Src/ICM20648.c **** 	a->gyro.z += inertial.gyro.z;
 557              		.loc 1 126 2 is_stmt 1 view .LVU125
 558              		.loc 1 126 28 is_stmt 0 view .LVU126
 559 003c 5B89     		ldrh	r3, [r3, #10]
 560              		.loc 1 126 12 view .LVU127
 561 003e 6289     		ldrh	r2, [r4, #10]
 562 0040 12FA83F3 		uxtah	r3, r2, r3
 563 0044 6381     		strh	r3, [r4, #10]	@ movhi
 127:Core/Src/ICM20648.c **** }
 564              		.loc 1 127 1 view .LVU128
 565 0046 10BD     		pop	{r4, pc}
 566              	.LVL45:
 567              	.L28:
 568              		.loc 1 127 1 view .LVU129
 569              		.align	2
 570              	.L27:
 571 0048 00000000 		.word	.LANCHOR0
 572              		.cfi_endproc
 573              	.LFE241:
 575              		.global	inertial_offset
 576              		.global	inertial
 577              		.section	.bss.inertial,"aw",%nobits
 578              		.align	2
 579              		.set	.LANCHOR0,. + 0
 582              	inertial:
 583 0000 00000000 		.space	12
 583      00000000 
 583      00000000 
 584              		.section	.bss.inertial_offset,"aw",%nobits
 585              		.align	2
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 14


 586              		.set	.LANCHOR1,. + 0
 589              	inertial_offset:
 590 0000 00000000 		.space	12
 590      00000000 
 590      00000000 
 591              		.text
 592              	.Letext0:
 593              		.file 2 "c:\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_type
 594              		.file 3 "c:\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 595              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 596              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 597              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 598              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 599              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 600              		.file 9 "Core/Inc/ICM20648.h"
 601              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 ICM20648.c
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:20     .text.read_byte:00000000 $t
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:26     .text.read_byte:00000000 read_byte
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:90     .text.read_byte:0000004c $d
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:96     .text.write_byte:00000000 $t
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:102    .text.write_byte:00000000 write_byte
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:166    .text.write_byte:0000004c $d
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:172    .text.IMU_fin:00000000 $t
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:178    .text.IMU_fin:00000000 IMU_fin
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:191    .text.IMU_read:00000000 $t
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:197    .text.IMU_read:00000000 IMU_read
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:318    .text.IMU_read:0000008c $d
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:323    .text.IMU_set_offset:00000000 $t
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:329    .text.IMU_set_offset:00000000 IMU_set_offset
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:354    .text.IMU_set_offset:00000014 $d
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:360    .text.IMU_init:00000000 $t
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:366    .text.IMU_init:00000000 IMU_init
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:491    .text.IMU_init:00000098 $d
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:498    .text.Inertial_Integral:00000000 $t
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:504    .text.Inertial_Integral:00000000 Inertial_Integral
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:571    .text.Inertial_Integral:00000048 $d
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:589    .bss.inertial_offset:00000000 inertial_offset
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:582    .bss.inertial:00000000 inertial
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:578    .bss.inertial:00000000 $d
C:\Users\tonfa\AppData\Local\Temp\ccZ87X6w.s:585    .bss.inertial_offset:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_SPI_Transmit
HAL_SPI_Receive
hspi2
HAL_Delay
